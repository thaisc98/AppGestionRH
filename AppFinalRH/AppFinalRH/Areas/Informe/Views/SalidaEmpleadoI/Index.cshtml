@model IEnumerable<ODN.SalidaEmpleado>

@{
    ViewBag.Title = "Index";
}
<br/>
<h3 class="text-center">Salidas de empleados</h3>

<table class="table table-striped table-bordered table-hover table-responsive">
    <tr class="text-primary active">
        <th>
            @Html.DisplayNameFor(model => model.Tipo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Motivo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FechaSalida)
        </th>
        <th>
            @Html.DisplayName("Empleado")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Tipo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Motivo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaSalida)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Empleado.Nombre)
                @Html.DisplayFor(modelItem => item.Empleado.Apellido)
                (@Html.DisplayFor(modelItem => item.Empleado.CodigoEmp))
            </td>
        </tr>
    }
</table>

@*
    @{
        double TotalPage = @ViewBag.TotalPages;
    }

    @for (int i = 1; i <= TotalPage; i++)
    {
        if (i == ViewBag.Page)
        {
            <b>@Html.ActionLink(i.ToString() + " ", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder), SortBy = (ViewBag == null ? "Nombre" : ViewBag.SortBy), Page = i }, new { @class = "btn btn-primary" })</b>
        }
        else
        {
            @Html.ActionLink(i.ToString() + " ", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder), SortBy = (ViewBag.SortBy == null ? "Nombre" : ViewBag.SortBy), Page = i }, new { @class = "btn btn-primary" })
        }
    }
*@
