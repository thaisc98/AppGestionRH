@model ODN.Usuario

@{
    ViewBag.Title = "Index";
}

<br />
<h3 class="text-center">Inicio de sesión</h3>

@if (TempData["Msg"] != null)
{
    <div class="alert alert-dismissable alert-info">
        <button type="button" class="close" data-dismiss="alert">x</button>
        @TempData["Msg"].ToString()
    </div>
}

@using (Html.BeginForm("Index", "ISesion", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contra, new { htmlAttributes = new { @class = "form-control" ,Type="password"} })
                @Html.ValidationMessageFor(model => model.Contra, "", new { @class = "text-danger" })
            </div>
        </div>
        <br/>
        <div class="form-inline"  >
            <div class="form-group" style="margin-left: 150px;">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Iniciar sesión" class="btn btn-primary"  />
                </div>
            </div>
           
            <div class="form-group"  style="margin-left: 10px;">
                <div class="col-md-offset-2 col-md-10">
                    @Html.ActionLink("Cancelar", "Index", "ISesion", new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
